const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkMigration() {
  try {
    console.log('üìä Migrasyon Sonu√ßlarƒ± Kontrol√º\n');
    
    // Kullanƒ±cƒ± sayƒ±sƒ±
    const userCount = await prisma.user.count();
    console.log(`üë• Kullanƒ±cƒ±lar: ${userCount}`);
    
    // M√º≈üteri sayƒ±sƒ±
    const customerCount = await prisma.customer.count();
    console.log(`üë§ M√º≈üteriler: ${customerCount}`);
    
    // Kategori sayƒ±sƒ±
    const categoryCount = await prisma.category.count();
    console.log(`üìÇ Kategoriler: ${categoryCount}`);
    
    // ƒ∞≈ülem sayƒ±sƒ±
    const transactionCount = await prisma.transaction.count();
    console.log(`üí∞ ƒ∞≈ülemler: ${transactionCount}`);
    
    // Bakiye sayƒ±sƒ±
    const balanceCount = await prisma.balance.count();
    console.log(`üí≥ Bakiyeler: ${balanceCount}`);
    
    // ƒ∞≈ülem t√ºrlerine g√∂re daƒüƒ±lƒ±m
    const transactionTypes = await prisma.transaction.groupBy({
      by: ['type'],
      _count: {
        type: true
      }
    });
    
    console.log('\nüìà ƒ∞≈ülem T√ºrleri Daƒüƒ±lƒ±mƒ±:');
    transactionTypes.forEach(type => {
      console.log(`   ${type.type}: ${type._count.type}`);
    });
    
    // √ñrnek veriler
    console.log('\nüîç √ñrnek Veriler:');
    
    const sampleUser = await prisma.user.findFirst();
    if (sampleUser) {
      console.log(`   Kullanƒ±cƒ±: ${sampleUser.username} (${sampleUser.email})`);
    }
    
    const sampleCustomer = await prisma.customer.findFirst();
    if (sampleCustomer) {
      console.log(`   M√º≈üteri: ${sampleCustomer.name} (${sampleCustomer.code})`);
    }
    
    const sampleTransaction = await prisma.transaction.findFirst({
      include: {
        customer: true,
        category: true,
        user: true
      }
    });
    if (sampleTransaction) {
      console.log(`   ƒ∞≈ülem: ${sampleTransaction.type} - ${sampleTransaction.amount} ${sampleTransaction.currency}`);
      if (sampleTransaction.customer) {
        console.log(`   M√º≈üteri: ${sampleTransaction.customer.name}`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå Kontrol hatasƒ±:', error);
  } finally {
    await prisma.$disconnect();
  }
}

checkMigration(); 